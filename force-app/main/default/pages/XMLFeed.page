<apex:page controller="XMLFeedGenerator" standardStylesheets="false" showHeader="false">
    <html>
        <head>
            <title>XML Feed</title>
            <script>
                var prettifyXml = function(sourceXml) {
                    var xmlDoc = new DOMParser().parseFromString(sourceXml, 'application/xml');

                    // Check for null values and replace them with an empty string
                    xmlDoc.querySelectorAll('*').forEach(function(node) {
                        if (node.textContent === 'null') {
                            node.textContent = '';
                        }
                    });

                    var xsltDoc = new DOMParser().parseFromString([
                        // describes how we want to modify the XML - indent everything
                        '<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform">',
                        '  <xsl:strip-space elements="*"/>',
                        '  <xsl:template match="para[content-style][not(text())]">',
                        '    <xsl:value-of select="normalize-space(.)"/>',
                        '  </xsl:template>',
                        '  <xsl:template match="node()|@*">',
                        '    <xsl:copy><xsl:apply-templates select="node()|@*"/></xsl:copy>',
                        '  </xsl:template>',
                        '  <xsl:output indent="yes"/>',
                        '</xsl:stylesheet>',
                    ].join('\n'), 'application/xml');

                    var xsltProcessor = new XSLTProcessor();
                    xsltProcessor.importStylesheet(xsltDoc);
                    var resultDoc = xsltProcessor.transformToDocument(xmlDoc);
                    var resultXml = new XMLSerializer().serializeToString(resultDoc);
                    return resultXml;
                };

                var xmlString = '{!xmlstring}';
                // Replace null values with empty strings
                xmlString = xmlString.replace(/<[^>]+>null<\/[^>]+>/g, '');

                var prettyXml = prettifyXml(xmlString);

                // Set the formatted XML in the textarea
                window.onload = function() {
                    document.querySelector('.output-holder').value = prettyXml;
                };
            </script>
            <style>
       			textarea{
                    border: none;
                    width: 100%;
                    height: 90vh;
                    font-family: monospace;
                    font-size: large;
                    resize: none;
                }
  			</style>
        </head>
        <body>
            <div>Account Record Data....</div>
            <textarea class="output-holder" disabled="true"></textarea>
        </body>
    </html>
</apex:page>